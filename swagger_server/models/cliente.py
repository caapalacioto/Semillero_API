# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Cliente(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, nombre: str=None, apellido: str=None, email: str=None, teledono: str=None):  # noqa: E501
        """Cliente - a model defined in Swagger

        :param id: The id of this Cliente.  # noqa: E501
        :type id: int
        :param nombre: The nombre of this Cliente.  # noqa: E501
        :type nombre: str
        :param apellido: The apellido of this Cliente.  # noqa: E501
        :type apellido: str
        :param email: The email of this Cliente.  # noqa: E501
        :type email: str
        :param teledono: The teledono of this Cliente.  # noqa: E501
        :type teledono: str
        """
        self.swagger_types = {
            'id': int,
            'nombre': str,
            'apellido': str,
            'email': str,
            'teledono': str
        }

        self.attribute_map = {
            'id': 'id',
            'nombre': 'nombre',
            'apellido': 'apellido',
            'email': 'email',
            'teledono': 'teledono'
        }

        self._id = id
        self._nombre = nombre
        self._apellido = apellido
        self._email = email
        self._teledono = teledono

    @classmethod
    def from_dict(cls, dikt) -> 'Cliente':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Cliente of this Cliente.  # noqa: E501
        :rtype: Cliente
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Cliente.


        :return: The id of this Cliente.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Cliente.


        :param id: The id of this Cliente.
        :type id: int
        """

        self._id = id

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Cliente.


        :return: The nombre of this Cliente.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Cliente.


        :param nombre: The nombre of this Cliente.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def apellido(self) -> str:
        """Gets the apellido of this Cliente.


        :return: The apellido of this Cliente.
        :rtype: str
        """
        return self._apellido

    @apellido.setter
    def apellido(self, apellido: str):
        """Sets the apellido of this Cliente.


        :param apellido: The apellido of this Cliente.
        :type apellido: str
        """

        self._apellido = apellido

    @property
    def email(self) -> str:
        """Gets the email of this Cliente.


        :return: The email of this Cliente.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Cliente.


        :param email: The email of this Cliente.
        :type email: str
        """

        self._email = email

    @property
    def teledono(self) -> str:
        """Gets the teledono of this Cliente.


        :return: The teledono of this Cliente.
        :rtype: str
        """
        return self._teledono

    @teledono.setter
    def teledono(self, teledono: str):
        """Sets the teledono of this Cliente.


        :param teledono: The teledono of this Cliente.
        :type teledono: str
        """

        self._teledono = teledono
