# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.producto import Producto
from swagger_server import util


class Pedido(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id_pedido: int=None, id_cliente: int=None, productos: List[Producto]=None, cantidad: int=None, fecha: datetime=None, estado: str=None, completa: bool=False):  # noqa: E501
        """Pedido - a model defined in Swagger

        :param id_pedido: The id_pedido of this Pedido.  # noqa: E501
        :type id_pedido: int
        :param id_cliente: The id_cliente of this Pedido.  # noqa: E501
        :type id_cliente: int
        :param productos: The productos of this Pedido.  # noqa: E501
        :type productos: List[Producto]
        :param cantidad: The cantidad of this Pedido.  # noqa: E501
        :type cantidad: int
        :param fecha: The fecha of this Pedido.  # noqa: E501
        :type fecha: datetime
        :param estado: The estado of this Pedido.  # noqa: E501
        :type estado: str
        :param completa: The completa of this Pedido.  # noqa: E501
        :type completa: bool
        """
        self.swagger_types = {
            'id_pedido': int,
            'id_cliente': int,
            'productos': List[Producto],
            'cantidad': int,
            'fecha': datetime,
            'estado': str,
            'completa': bool
        }

        self.attribute_map = {
            'id_pedido': 'idPedido',
            'id_cliente': 'idCliente',
            'productos': 'productos',
            'cantidad': 'cantidad',
            'fecha': 'fecha',
            'estado': 'estado',
            'completa': 'completa'
        }

        self._id_pedido = id_pedido
        self._id_cliente = id_cliente
        self._productos = productos
        self._cantidad = cantidad
        self._fecha = fecha
        self._estado = estado
        self._completa = completa

    @classmethod
    def from_dict(cls, dikt) -> 'Pedido':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Pedido of this Pedido.  # noqa: E501
        :rtype: Pedido
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_pedido(self) -> int:
        """Gets the id_pedido of this Pedido.


        :return: The id_pedido of this Pedido.
        :rtype: int
        """
        return self._id_pedido

    @id_pedido.setter
    def id_pedido(self, id_pedido: int):
        """Sets the id_pedido of this Pedido.


        :param id_pedido: The id_pedido of this Pedido.
        :type id_pedido: int
        """

        self._id_pedido = id_pedido

    @property
    def id_cliente(self) -> int:
        """Gets the id_cliente of this Pedido.


        :return: The id_cliente of this Pedido.
        :rtype: int
        """
        return self._id_cliente

    @id_cliente.setter
    def id_cliente(self, id_cliente: int):
        """Sets the id_cliente of this Pedido.


        :param id_cliente: The id_cliente of this Pedido.
        :type id_cliente: int
        """

        self._id_cliente = id_cliente

    @property
    def productos(self) -> List[Producto]:
        """Gets the productos of this Pedido.


        :return: The productos of this Pedido.
        :rtype: List[Producto]
        """
        return self._productos

    @productos.setter
    def productos(self, productos: List[Producto]):
        """Sets the productos of this Pedido.


        :param productos: The productos of this Pedido.
        :type productos: List[Producto]
        """

        self._productos = productos

    @property
    def cantidad(self) -> int:
        """Gets the cantidad of this Pedido.


        :return: The cantidad of this Pedido.
        :rtype: int
        """
        return self._cantidad

    @cantidad.setter
    def cantidad(self, cantidad: int):
        """Sets the cantidad of this Pedido.


        :param cantidad: The cantidad of this Pedido.
        :type cantidad: int
        """

        self._cantidad = cantidad

    @property
    def fecha(self) -> datetime:
        """Gets the fecha of this Pedido.


        :return: The fecha of this Pedido.
        :rtype: datetime
        """
        return self._fecha

    @fecha.setter
    def fecha(self, fecha: datetime):
        """Sets the fecha of this Pedido.


        :param fecha: The fecha of this Pedido.
        :type fecha: datetime
        """

        self._fecha = fecha

    @property
    def estado(self) -> str:
        """Gets the estado of this Pedido.

        estado del pedido  # noqa: E501

        :return: The estado of this Pedido.
        :rtype: str
        """
        return self._estado

    @estado.setter
    def estado(self, estado: str):
        """Sets the estado of this Pedido.

        estado del pedido  # noqa: E501

        :param estado: The estado of this Pedido.
        :type estado: str
        """
        allowed_values = ["pendiente", "aprovada", "entregada"]  # noqa: E501
        if estado not in allowed_values:
            raise ValueError(
                "Invalid value for `estado` ({0}), must be one of {1}"
                .format(estado, allowed_values)
            )

        self._estado = estado

    @property
    def completa(self) -> bool:
        """Gets the completa of this Pedido.


        :return: The completa of this Pedido.
        :rtype: bool
        """
        return self._completa

    @completa.setter
    def completa(self, completa: bool):
        """Sets the completa of this Pedido.


        :param completa: The completa of this Pedido.
        :type completa: bool
        """

        self._completa = completa
