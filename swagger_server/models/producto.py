# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.categoria import Categoria
from swagger_server import util


class Producto(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, categoria: Categoria=None, nombre: str=None, foto_urls: List[str]=None, estado: str=None, cantidad: int=None):  # noqa: E501
        """Producto - a model defined in Swagger

        :param id: The id of this Producto.  # noqa: E501
        :type id: int
        :param categoria: The categoria of this Producto.  # noqa: E501
        :type categoria: Categoria
        :param nombre: The nombre of this Producto.  # noqa: E501
        :type nombre: str
        :param foto_urls: The foto_urls of this Producto.  # noqa: E501
        :type foto_urls: List[str]
        :param estado: The estado of this Producto.  # noqa: E501
        :type estado: str
        :param cantidad: The cantidad of this Producto.  # noqa: E501
        :type cantidad: int
        """
        self.swagger_types = {
            'id': int,
            'categoria': Categoria,
            'nombre': str,
            'foto_urls': List[str],
            'estado': str,
            'cantidad': int
        }

        self.attribute_map = {
            'id': 'id',
            'categoria': 'categoria',
            'nombre': 'nombre',
            'foto_urls': 'fotoUrls',
            'estado': 'estado',
            'cantidad': 'cantidad'
        }

        self._id = id
        self._categoria = categoria
        self._nombre = nombre
        self._foto_urls = foto_urls
        self._estado = estado
        self._cantidad = cantidad

    @classmethod
    def from_dict(cls, dikt) -> 'Producto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Producto of this Producto.  # noqa: E501
        :rtype: Producto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Producto.


        :return: The id of this Producto.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Producto.


        :param id: The id of this Producto.
        :type id: int
        """

        self._id = id

    @property
    def categoria(self) -> Categoria:
        """Gets the categoria of this Producto.


        :return: The categoria of this Producto.
        :rtype: Categoria
        """
        return self._categoria

    @categoria.setter
    def categoria(self, categoria: Categoria):
        """Sets the categoria of this Producto.


        :param categoria: The categoria of this Producto.
        :type categoria: Categoria
        """

        self._categoria = categoria

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Producto.


        :return: The nombre of this Producto.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Producto.


        :param nombre: The nombre of this Producto.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def foto_urls(self) -> List[str]:
        """Gets the foto_urls of this Producto.


        :return: The foto_urls of this Producto.
        :rtype: List[str]
        """
        return self._foto_urls

    @foto_urls.setter
    def foto_urls(self, foto_urls: List[str]):
        """Sets the foto_urls of this Producto.


        :param foto_urls: The foto_urls of this Producto.
        :type foto_urls: List[str]
        """

        self._foto_urls = foto_urls

    @property
    def estado(self) -> str:
        """Gets the estado of this Producto.

        estado del producto en la cafeteria  # noqa: E501

        :return: The estado of this Producto.
        :rtype: str
        """
        return self._estado

    @estado.setter
    def estado(self, estado: str):
        """Sets the estado of this Producto.

        estado del producto en la cafeteria  # noqa: E501

        :param estado: The estado of this Producto.
        :type estado: str
        """
        allowed_values = ["disponible", "agotado"]  # noqa: E501
        if estado not in allowed_values:
            raise ValueError(
                "Invalid value for `estado` ({0}), must be one of {1}"
                .format(estado, allowed_values)
            )

        self._estado = estado

    @property
    def cantidad(self) -> int:
        """Gets the cantidad of this Producto.


        :return: The cantidad of this Producto.
        :rtype: int
        """
        return self._cantidad

    @cantidad.setter
    def cantidad(self, cantidad: int):
        """Sets the cantidad of this Producto.


        :param cantidad: The cantidad of this Producto.
        :type cantidad: int
        """

        self._cantidad = cantidad
