---
swagger: "2.0"
info:
  description: "Este es un CoffeHouse API, la cual permite aministrar los compoenentes\
    \ de: productos, empleados, clientes y administración (Pedidos e inventarios)\n"
  version: "1.0.0"
  title: "CoffeeHouse"
  contact:
    email: "caapalacioto@unal.edu.co"
  license:
    name: "MIT"
    url: "https://mit-license.org/"
host: "virtserver.swaggerhub.com"
basePath: "/caapalacioto/CoffeeAPI/1.0.0"
tags:
- name: "productos"
  description: "Información sobre los productos de la cafeteria."
- name: "admin"
  description: "Acceso a la administración de CoffeHouse."
- name: "empleado"
  description: "Operaciones sobre los empleados."
- name: "cliente"
  description: "Operaciones sobre los clientes."
schemes:
- "https"
paths:
  /productos:
    post:
      tags:
      - "productos"
      summary: "Crear un nuevo producto"
      description: "Crea un producto"
      operationId: "crear_producto"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto producto que debe agregarse a la tienda"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      responses:
        "201":
          description: "Producto creado"
        "400":
          description: "Objeto invalido"
        "409":
          description: "El producto ya existe"
      x-swagger-router-controller: "swagger_server.controllers.productos_controller"
    put:
      tags:
      - "productos"
      summary: "Actualizar un producto existente"
      description: "Actulziar un producto"
      operationId: "actualizar_producto"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto producto que debe agregarse a la tienda"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      responses:
        "200":
          description: "Producto actualizado"
        "400":
          description: "Objeto invalido"
        "404":
          description: "Producto no encontrado"
      x-swagger-router-controller: "swagger_server.controllers.productos_controller"
  /productos/porEstado:
    get:
      tags:
      - "productos"
      summary: "Buscar producto por estado."
      operationId: "buscar_producto_por_estado"
      parameters:
      - name: "status"
        in: "query"
        description: "Valores de estado que deben tenerse en cuenta para el filtro"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "disponible"
          - "agotado"
          default: "disponible"
        collectionFormat: "multi"
      responses:
        "200":
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Producto"
        "400":
          description: "Parametros de busqueda incorrectos"
      x-swagger-router-controller: "swagger_server.controllers.productos_controller"
  /productos/{idProducto}:
    get:
      tags:
      - "productos"
      summary: "Buscar un producto por ID"
      description: "Permite buscar un producto por su ID"
      operationId: "productos_id_producto_get"
      parameters:
      - name: "idProducto"
        in: "path"
        description: "ID del producto a buscar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Producto"
        "400":
          description: "Parametros de busqueda incorrectos"
        "404":
          description: "Producto no encontrado"
      x-swagger-router-controller: "swagger_server.controllers.productos_controller"
    delete:
      tags:
      - "productos"
      summary: "Borrar un producto por su id"
      operationId: "borrar_producto"
      parameters:
      - name: "idProducto"
        in: "path"
        description: "ID del producto a borrar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Ok"
        "400":
          description: "Parametros de busqueda incorrectos"
        "404":
          description: "Producto no encontrado"
      x-swagger-router-controller: "swagger_server.controllers.productos_controller"
  /admin/inventorio:
    get:
      tags:
      - "admin"
      summary: "Muestra el inventario de los productos por estado"
      operationId: "obtener_inventario"
      parameters: []
      responses:
        "200":
          description: "Ok"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      x-swagger-router-controller: "swagger_server.controllers.admin_controller"
  /admin/compras:
    post:
      tags:
      - "admin"
      summary: "Crea un pedido"
      operationId: "crear_un_pedido"
      parameters:
      - in: "body"
        name: "body"
        description: "pedido realizado"
        required: true
        schema:
          $ref: "#/definitions/Pedido"
      responses:
        "201":
          description: "Pedido creado"
        "400":
          description: "Objeto invalido"
        "409":
          description: "El pedido ya existe"
      x-swagger-router-controller: "swagger_server.controllers.admin_controller"
  /admin/pedido/{idPedido}:
    get:
      tags:
      - "admin"
      summary: "Busca un pedido por su ID"
      operationId: "obtener_pedido_por_id"
      parameters:
      - name: "idPedido"
        in: "path"
        description: "ID del pedido a buscar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Pedido"
        "400":
          description: "Parametros de busqueda incorrectos"
        "404":
          description: "Pedido no encontrado"
      x-swagger-router-controller: "swagger_server.controllers.admin_controller"
    delete:
      tags:
      - "admin"
      summary: "Borrar pedido por Id"
      operationId: "borrar_pedido"
      parameters:
      - name: "idPedido"
        in: "path"
        description: "ID del pedido a borrar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Pedido borarrdo"
        "400":
          description: "Parametros de busqueda incorrectos"
        "404":
          description: "Pedido no encontrado"
      x-swagger-router-controller: "swagger_server.controllers.admin_controller"
  /empleado:
    post:
      tags:
      - "empleado"
      summary: "Crear un empleado"
      operationId: "crear_empleado"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto empleado a crear"
        required: true
        schema:
          $ref: "#/definitions/Empleado"
      responses:
        "201":
          description: "Empleado creado"
        "400":
          description: "Objeto invalido"
        "409":
          description: "El empleado ya existe"
      x-swagger-router-controller: "swagger_server.controllers.empleado_controller"
  /empleado/{idEmpleado}:
    get:
      tags:
      - "empleado"
      summary: "buscar un empleado por ID"
      operationId: "buscar_empleado_por_id"
      parameters:
      - name: "idEmpleado"
        in: "path"
        description: "ID del empleado a buscar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Empleado"
        "400":
          description: "Parametros de busqueda incorrectos"
        "404":
          description: "Empleado no encontrado"
      x-swagger-router-controller: "swagger_server.controllers.empleado_controller"
    put:
      tags:
      - "empleado"
      summary: "actualizar un empleado"
      operationId: "actualizar_empleado"
      parameters:
      - name: "idEmpleado"
        in: "path"
        description: "ID del empleado a actualizar"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto empleado actualizado"
        required: true
        schema:
          $ref: "#/definitions/Empleado"
      responses:
        "200":
          description: "Empleado actualizado"
        "400":
          description: "Objeto invalido"
      x-swagger-router-controller: "swagger_server.controllers.empleado_controller"
    delete:
      tags:
      - "empleado"
      summary: "Borrar empleado"
      operationId: "delete_user"
      parameters:
      - name: "idEmpleado"
        in: "path"
        description: "ID del empleado a borrar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Empleado borrado"
        "400":
          description: "Parametros de busqueda incorrectos"
        "404":
          description: "Empleado no encontrado"
      x-swagger-router-controller: "swagger_server.controllers.empleado_controller"
  /cliente:
    post:
      tags:
      - "cliente"
      summary: "Crear un cliente"
      operationId: "crear_cliente"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto cliente a crear"
        required: true
        schema:
          $ref: "#/definitions/Empleado"
      responses:
        "201":
          description: "Cliente creado"
        "400":
          description: "Objeto invalido"
        "409":
          description: "El cliente ya existe"
      x-swagger-router-controller: "swagger_server.controllers.cliente_controller"
  /cliente/{idCliente}:
    get:
      tags:
      - "cliente"
      summary: "buscar un Cliente por ID"
      operationId: "buscar_cliente_por_id"
      parameters:
      - name: "idCliente"
        in: "path"
        description: "ID del cliente a buscar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Ok"
          schema:
            $ref: "#/definitions/Cliente"
        "400":
          description: "Parametros de busqueda incorrectos"
      x-swagger-router-controller: "swagger_server.controllers.cliente_controller"
    put:
      tags:
      - "cliente"
      summary: "actualizar un cliente"
      operationId: "actualizar_cliente"
      parameters:
      - name: "idCliente"
        in: "path"
        description: "ID delcliente a actualizar"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto cliente actualizado"
        required: true
        schema:
          $ref: "#/definitions/Cliente"
      responses:
        "200":
          description: "Cliente actualizado"
        "400":
          description: "Objeto invalido"
      x-swagger-router-controller: "swagger_server.controllers.cliente_controller"
    delete:
      tags:
      - "cliente"
      summary: "Borrar cliente"
      operationId: "borrar_cliente"
      parameters:
      - name: "idCliente"
        in: "path"
        description: "ID del cliente a borrar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "cliente borrado"
        "400":
          description: "Parametros de busqueda incorrectos"
        "404":
          description: "Clienete no encontrado"
      x-swagger-router-controller: "swagger_server.controllers.cliente_controller"
definitions:
  Pedido:
    type: "object"
    properties:
      idPedido:
        type: "integer"
        format: "int64"
      idCliente:
        type: "integer"
        format: "int64"
      productos:
        type: "array"
        items:
          $ref: "#/definitions/Producto"
      cantidad:
        type: "integer"
        format: "int32"
      fecha:
        type: "string"
        format: "date-time"
      estado:
        type: "string"
        description: "estado del pedido"
        enum:
        - "pendiente"
        - "aprovada"
        - "entregada"
      completa:
        type: "boolean"
        default: false
    xml:
      name: "Pedido"
    example:
      completa: false
      fecha: "2000-01-23T04:56:07.000+00:00"
      estado: "pendiente"
      idCliente: 6
      cantidad: 1
      idPedido: 0
      productos:
      - estado: "disponible"
        categoria:
          name: "name"
          id: 6
        fotoUrls:
        - "fotoUrls"
        - "fotoUrls"
        id: 0
        cantidad: 1
        nombre: "Carlos"
      - estado: "disponible"
        categoria:
          name: "name"
          id: 6
        fotoUrls:
        - "fotoUrls"
        - "fotoUrls"
        id: 0
        cantidad: 1
        nombre: "Carlos"
  Categoria:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Categoria"
    example:
      name: "name"
      id: 6
  Cliente:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nombre:
        type: "string"
      apellido:
        type: "string"
      email:
        type: "string"
      teledono:
        type: "string"
    xml:
      name: "Cliente"
    example:
      teledono: "teledono"
      apellido: "apellido"
      id: 0
      nombre: "nombre"
      email: "email"
  Empleado:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nombre:
        type: "string"
      apellido:
        type: "string"
      email:
        type: "string"
      telefono:
        type: "string"
      ocupación:
        type: "string"
      eps:
        type: "string"
      arl:
        type: "string"
    xml:
      name: "Empleado"
    example:
      apellido: "apellido"
      eps: "eps"
      arl: "arl"
      id: 0
      telefono: "telefono"
      nombre: "nombre"
      email: "email"
      ocupación: "ocupación"
  Producto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      categoria:
        $ref: "#/definitions/Categoria"
      nombre:
        type: "string"
        example: "Carlos"
      fotoUrls:
        type: "array"
        xml:
          name: "fotoUrl"
          wrapped: true
        items:
          type: "string"
      estado:
        type: "string"
        description: "estado del producto en la cafeteria"
        enum:
        - "disponible"
        - "agotado"
      cantidad:
        type: "integer"
    xml:
      name: "Producto"
    example:
      estado: "disponible"
      categoria:
        name: "name"
        id: 6
      fotoUrls:
      - "fotoUrls"
      - "fotoUrls"
      id: 0
      cantidad: 1
      nombre: "Carlos"
